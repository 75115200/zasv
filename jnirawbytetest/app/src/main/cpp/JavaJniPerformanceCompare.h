/*
 * JNI Header file generated by annotation JNI helper
 * written by landerlyoung@gmail.com
 */

/* C/C++ header file for class com.young.jennysampleapp.ComputeIntensiveClass */
#pragma once

#include <jni.h>

namespace  JavaJniPerformanceCompare {



/*
 * Class:     com_young_jnirawbytetest_JavaJniPerformanceCompare
 * Method:    public static int add(int a, int b)
 * Signature: (II)I
 */
jint add(JNIEnv *env, jclass clazz, jint a, jint b);


/*
 * Class:     com_young_jnirawbytetest_JavaJniPerformanceCompare
 * Method:    public static int batchAdd(int a, int b, int count)
 * Signature: (III)I
 */
jint batchAdd(JNIEnv *env, jclass clazz, jint a, jint b, jint count);


/*
 * Class:     com_young_jnirawbytetest_JavaJniPerformanceCompare
 * Method:    public static void passByteArrayToNative(byte[] data)
 * Signature: ([B)V
 */
void passByteArrayToNative(JNIEnv *env, jclass clazz, jbyteArray data);


/*
 * Class:     com_young_jnirawbytetest_JavaJniPerformanceCompare
 * Method:    public static void passByteBufferToNative(java.nio.ByteBuffer data)
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
void passByteBufferToNative(JNIEnv *env, jclass clazz, jobject data);


/*
 * Class:     com_young_jnirawbytetest_JavaJniPerformanceCompare
 * Method:    public static void cppBatchMemcpy(int size, int count)
 * Signature: (II)V
 */
void cppBatchMemcpy(JNIEnv *env, jclass clazz, jint size, jint count);


/*
 * Class:     com_young_jnirawbytetest_JavaJniPerformanceCompare
 * Method:    public static void cppBatchMemset(int size, int count)
 * Signature: (II)V
 */
void cppBatchMemset(JNIEnv *env, jclass clazz, jint size, jint count);




/*
 * register Native functions
 */
void registerNativeFunctions(JNIEnv *env);

} //endof namespace JavaJniPerformanceCompare
