/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE WITHOUT COPYING TO YOUR SRC DIRECTORY.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues,
 * or contact author landerlyoung@gmail.com.
 */

/* C++ header file for class com.young.jennysampleapp.ComputeIntensiveClass */
#pragma once

#include <jni.h>

namespace  KalaClean {

//DO NOT modify
static constexpr auto FULL_CLASS_NAME = "com/tencent/audioeffect/effect/impl/KalaClean";



/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaClean
 * Method:    private static long createClean2(int sampleRate, int channel)
 * Signature: (II)J
 */
jlong createClean2(JNIEnv *env, jclass clazz, jint sampleRate, jint channel);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaClean
 * Method:    private static int clean2Process(long handel, byte[] inBuffer, int size)
 * Signature: (J[BI)I
 */
jint clean2Process(JNIEnv *env, jclass clazz, jlong handel, jbyteArray inBuffer, jint size);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaClean
 * Method:    private void destroyClean2(long handel)
 * Signature: (J)V
 */
void destroyClean2(JNIEnv *env, jobject thiz, jlong handel);




/**
 * register Native functions
 * @returns success or not
 */
bool registerNativeFunctions(JNIEnv *env);

} //endof namespace KalaClean
