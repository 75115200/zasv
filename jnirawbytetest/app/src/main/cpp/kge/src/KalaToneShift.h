/*
 * JNI Header file generated by annotation JNI helper
 * written by landerlyoung@gmail.com
 */

/* C/C++ header file for class com.young.jennysampleapp.ComputeIntensiveClass */
#pragma once

#include <jni.h>

namespace  KalaToneShift {



/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaToneShift
 * Method:    private static long nativeCreate(int sampleRate, int dualChannel)
 * Signature: (II)J
 */
jlong nativeCreate(JNIEnv *env, jclass clazz, jint sampleRate, jint channelCount);


/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaToneShift
 * Method:    private static int setShiftValue(long handle, int shiftVal)
 * Signature: (JI)I
 */
jint setShiftValue(JNIEnv *env, jclass clazz, jlong handle, jint shiftVal);


/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaToneShift
 * Method:    private static int process(long handel, byte[] inBuf, int inSize, byte[] outBuf, int outSize)
 * Signature: (J[BI[BI)I
 */
jint process(JNIEnv *env, jclass clazz, jlong handel, jbyteArray inBuf, jint inSize, jbyteArray outBuf, jint outSize);


/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaToneShift
 * Method:    private static void release(long handel)
 * Signature: (J)V
 */
void release(JNIEnv *env, jclass clazz, jlong handel);




/*
 * register Native functions
 */
void registerNativeFunctions(JNIEnv *env);

} //endof namespace KalaToneShift
