/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE WITHOUT COPYING TO YOUR SRC DIRECTORY.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues,
 * or contact author landerlyoung@gmail.com.
 */

/* C++ header file for class com.young.jennysampleapp.ComputeIntensiveClass */
#pragma once

#include <jni.h>

namespace  KalaToneShift {

//DO NOT modify
static constexpr auto FULL_CLASS_NAME = "com/tencent/audioeffect/effect/impl/KalaToneShift";



/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaToneShift
 * Method:    private static long nativeCreate(int sampleRate, int channelCount)
 * Signature: (II)J
 */
jlong nativeCreate(JNIEnv *env, jclass clazz, jint sampleRate, jint channelCount);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaToneShift
 * Method:    private static int setShiftValue(long handle, int shiftVal)
 * Signature: (JI)I
 */
jint setShiftValue(JNIEnv *env, jclass clazz, jlong handle, jint shiftVal);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaToneShift
 * Method:    private static int process(long handel, byte[] inBuf, int inSize, byte[] outBuf, int outSize)
 * Signature: (J[BI[BI)I
 */
jint process(JNIEnv *env, jclass clazz, jlong handel, jbyteArray inBuf, jint inSize, jbyteArray outBuf, jint outSize);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaToneShift
 * Method:    private static void release(long handle)
 * Signature: (J)V
 */
void release(JNIEnv *env, jclass clazz, jlong handle);




/**
 * register Native functions
 * @returns success or not
 */
bool registerNativeFunctions(JNIEnv *env);

} //endof namespace KalaToneShift
