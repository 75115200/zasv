/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE WITHOUT COPYING TO YOUR SRC DIRECTORY.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues,
 * or contact author landerlyoung@gmail.com.
 */

/* C++ header file for class com.young.jennysampleapp.ComputeIntensiveClass */
#pragma once

#include <jni.h>
#include <cstdint>
#include <map>
#include <algorithm>

namespace  KalaReverb {

//DO NOT modify
static constexpr auto FULL_CLASS_NAME = "com/tencent/audioeffect/effect/impl/KalaReverb";

static constexpr jint KALA_VB_NO_EFFECT_QUICKLY = 10;
static constexpr jint KALA_VB_KTV_V40_QUICKLY = 11;
static constexpr jint KALA_VB_WARM_QUICKLY = 12;
static constexpr jint KALA_VB_MAGNETIC_QUICKLY = 13;
static constexpr jint KALA_VB_ETHEREAL_QUICKLY = 14;
static constexpr jint KALA_VB_DISTANT_QUICKLY = 15;
static constexpr jint KALA_VB_DIZZY_QUICKLY = 16;
static constexpr jint KALA_VB_PHONOGRAPH_QUICKLY = 17;
static constexpr jint KALA_VB_PHONOGRAPH_GENERIC_QUICKLY = 18;

typedef struct ReverbParam {
    int32_t sampleRate;
    int32_t channelCount;
} ReverbParam;

static std::map<int64_t , ReverbParam*> paramMap;

/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaReverb
 * Method:    private static long create(int sampleRate, int channelCount)
 * Signature: (II)J
 */
jlong create(JNIEnv *env, jclass clazz, jint sampleRate, jint channelCount);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaReverb
 * Method:    private static void getIdRange(long nativeHandel, int[] maxAndMin)
 * Signature: (J[I)V
 */
void getIdRange(JNIEnv *env, jclass clazz, jlong nativeHandel, jintArray maxAndMin);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaReverb
 * Method:    private static int getIdDefault(long nativeHandel)
 * Signature: (J)I
 */
jint getIdDefault(JNIEnv *env, jclass clazz, jlong nativeHandel);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaReverb
 * Method:    private static int setTypeId(long nativeHandel, int type)
 * Signature: (JI)I
 */
jint setTypeId(JNIEnv *env, jclass clazz, jlong nativeHandel, jint type);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaReverb
 * Method:    private static int getTypeId(long nativeHandel)
 * Signature: (J)I
 */
jint getTypeId(JNIEnv *env, jclass clazz, jlong nativeHandel);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaReverb
 * Method:    private static java.lang.String getNameId(long nativeHandel, int typeId)
 * Signature: (JI)Ljava/lang/String;
 */
jstring getNameId(JNIEnv *env, jclass clazz, jlong nativeHandel, jint typeId);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaReverb
 * Method:    private static int process(long nativeHandel, byte[] inBuffer, int insize, byte[] outBuffer, int outSize)
 * Signature: (J[BI[BI)I
 */
jint process(JNIEnv *env, jclass clazz, jlong nativeHandel, jbyteArray inBuffer, jint insize, jbyteArray outBuffer, jint outSize);


/*
 * Class:     com_tencent_audioeffect_effect_impl_KalaReverb
 * Method:    private static void release(long nativeHandel)
 * Signature: (J)V
 */
void release(JNIEnv *env, jclass clazz, jlong nativeHandel);


/**
 * register Native functions
 * @returns success or not
 */
bool registerNativeFunctions(JNIEnv *env);

} //endof namespace KalaReverb
