/*
 * JNI Header file generated by annotation JNI helper
 * written by landerlyoung@gmail.com
 */

/* C/C++ header file for class com.young.jennysampleapp.ComputeIntensiveClass */
#pragma once

#include <jni.h>

namespace  KalaAudioGain {



/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaAudioGain
 * Method:    private static long create(int sampleRate, int channelCount)
 * Signature: (II)J
 */
jlong create(JNIEnv *env, jclass clazz, jint sampleRate, jint channelCount);


/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaAudioGain
 * Method:    private static int process(long nativeHandel, byte[] inOutBuffer, int size)
 * Signature: (J[BI)I
 */
jint process(JNIEnv *env, jclass clazz, jlong nativeHandel, jbyteArray inOutBuffer, jint size);


/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaAudioGain
 * Method:    private static void release(long nativeHandel)
 * Signature: (J)V
 */
void release(JNIEnv *env, jclass clazz, jlong nativeHandel);




/*
 * register Native functions
 */
void registerNativeFunctions(JNIEnv *env);

} //endof namespace KalaAudioGain
