/*
 * JNI Header file generated by annotation JNI helper
 * written by landerlyoung@gmail.com
 */

/* C/C++ header file for class com.young.jennysampleapp.ComputeIntensiveClass */
#pragma once

#include <jni.h>

namespace  KalaMix {



/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaMix
 * Method:    private static long create(int sampleRate, int channel)
 * Signature: (II)J
 */
jlong create(JNIEnv *env, jclass clazz, jint sampleRate, jint channel);


/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaMix
 * Method:    private static int process(long handel, byte[] bgm, int bgmSize, byte[] vocal, int vocalSize, byte[] out, int outSize)
 * Signature: (J[BI[BI[BI)I
 */
jint process(JNIEnv *env, jclass clazz, jlong handel, jbyteArray bgm, jint bgmSize, jbyteArray vocal, jint vocalSize, jbyteArray out, jint outSize);


/*
 * Class:     com_young_jnirawbytetest_audiotest_KalaMix
 * Method:    private void release(long handel)
 * Signature: (J)V
 */
void release(JNIEnv *env, jobject thiz, jlong handel);




/*
 * register Native functions
 */
void registerNativeFunctions(JNIEnv *env);

} //endof namespace KalaMix
